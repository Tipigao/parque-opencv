/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package transformacao;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ItemEvent;
import java.awt.image.BufferedImage;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JPanel;
import opencv.IOpenCVUI;

/**
 *
 * @author Roberto
 */
public class TransformadaHoughUI extends javax.swing.JPanel implements IOpenCVUI, Observer {

    private JPanel pnlExibicao;
    private TransformadaHough obj;
    private boolean cameraDisponivel;

    /**
     * Creates new form TransformadaHoughUI
     */
    public TransformadaHoughUI() {
        initComponents();

        obj = new TransformadaHough();
        obj.addObserver(this);

        sldDistancia.setValue((int) obj.getRho());
        sldAngulo.setValue((int) obj.getTheta());
        sldLimite.setValue(obj.getThreshold());
        sldTamMinLinha.setValue((int) obj.getMinLineLength());
        sldDiferencaLinha.setValue((int) obj.getMaxLineGap());
        sldHisterese1.setValue((int) obj.getCannyThreshold1());
        sldHisterese2.setValue((int) obj.getCannyThreshold2());
        sldSobel.setValue(obj.getCannyApertureSize());

        spnDistancia.setValue((int) obj.getRho());
        spnAngulo.setValue((int) obj.getTheta());
        spnLimite.setValue(obj.getThreshold());
        spnTamMinLinha.setValue((int) obj.getMinLineLength());
        spnDiferencaLinha.setValue((int) obj.getMaxLineGap());
        spnHisterese1.setValue((int) obj.getCannyThreshold1());
        spnHisterese2.setValue((int) obj.getCannyThreshold2());
        spnSobel.setValue(obj.getCannyApertureSize());

        cbxGradiente.setSelected(obj.getCannyGradient());

        cameraDisponivel = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioImgExibicao = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        sldHisterese1 = new javax.swing.JSlider();
        spnHisterese1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        sldHisterese2 = new javax.swing.JSlider();
        spnHisterese2 = new javax.swing.JSpinner();
        lblSobel = new javax.swing.JLabel();
        sldSobel = new javax.swing.JSlider();
        spnSobel = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        cbxGradiente = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sldDistancia = new javax.swing.JSlider();
        spnDistancia = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        sldAngulo = new javax.swing.JSlider();
        spnAngulo = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        sldLimite = new javax.swing.JSlider();
        spnLimite = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        sldTamMinLinha = new javax.swing.JSlider();
        spnTamMinLinha = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        sldDiferencaLinha = new javax.swing.JSlider();
        spnDiferencaLinha = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        radImgOriginal = new javax.swing.JRadioButton();
        radImgContorno = new javax.swing.JRadioButton();
        radImgOriginalLinha = new javax.swing.JRadioButton();
        radImgContornoLinha = new javax.swing.JRadioButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Detecção de contorno (Bordas de Canny)"));
        jPanel1.setLayout(new java.awt.GridLayout(0, 3, 5, 5));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("1º limiar histerese");
        jPanel1.add(jLabel4);

        sldHisterese1.setMaximum(2000);
        sldHisterese1.setMinimum(1);
        sldHisterese1.setValue(600);
        sldHisterese1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldHisterese1StateChanged(evt);
            }
        });
        jPanel1.add(sldHisterese1);

        spnHisterese1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnHisterese1StateChanged(evt);
            }
        });
        jPanel1.add(spnHisterese1);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("2º limiar histerese");
        jPanel1.add(jLabel5);

        sldHisterese2.setMaximum(2000);
        sldHisterese2.setMinimum(1);
        sldHisterese2.setValue(300);
        sldHisterese2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldHisterese2StateChanged(evt);
            }
        });
        jPanel1.add(sldHisterese2);

        spnHisterese2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnHisterese2StateChanged(evt);
            }
        });
        jPanel1.add(spnHisterese2);

        lblSobel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSobel.setText("Abertura Sobel");
        jPanel1.add(lblSobel);

        sldSobel.setMaximum(7);
        sldSobel.setMinimum(-1);
        sldSobel.setValue(5);
        sldSobel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldSobelStateChanged(evt);
            }
        });
        jPanel1.add(sldSobel);

        spnSobel.setModel(new javax.swing.SpinnerNumberModel(3, -1, 7, 2));
        spnSobel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnSobelStateChanged(evt);
            }
        });
        jPanel1.add(spnSobel);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Gradiente");
        jPanel1.add(jLabel7);

        cbxGradiente.setSelected(true);
        cbxGradiente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbxGradienteStateChanged(evt);
            }
        });
        jPanel1.add(cbxGradiente);
        cbxGradiente.getAccessibleContext().setAccessibleName("cboGradiente");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Transformada de Hough"));
        jPanel2.setLayout(new java.awt.GridLayout(0, 3, 5, 5));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Distância em pixels");
        jPanel2.add(jLabel1);

        sldDistancia.setMaximum(500);
        sldDistancia.setMinimum(1);
        sldDistancia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldDistanciaStateChanged(evt);
            }
        });
        jPanel2.add(sldDistancia);

        spnDistancia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnDistanciaStateChanged(evt);
            }
        });
        jPanel2.add(spnDistancia);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Ângulo em radianos");
        jPanel2.add(jLabel2);

        sldAngulo.setMaximum(360);
        sldAngulo.setMinimum(1);
        sldAngulo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldAnguloStateChanged(evt);
            }
        });
        jPanel2.add(sldAngulo);

        spnAngulo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnAnguloStateChanged(evt);
            }
        });
        jPanel2.add(spnAngulo);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Limite");
        jPanel2.add(jLabel3);

        sldLimite.setMinimum(1);
        sldLimite.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldLimiteStateChanged(evt);
            }
        });
        jPanel2.add(sldLimite);

        spnLimite.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnLimiteStateChanged(evt);
            }
        });
        jPanel2.add(spnLimite);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Tamanho mín. linha");
        jPanel2.add(jLabel8);

        sldTamMinLinha.setMaximum(500);
        sldTamMinLinha.setMinimum(1);
        sldTamMinLinha.setValue(20);
        sldTamMinLinha.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldTamMinLinhaStateChanged(evt);
            }
        });
        jPanel2.add(sldTamMinLinha);

        spnTamMinLinha.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnTamMinLinhaStateChanged(evt);
            }
        });
        jPanel2.add(spnTamMinLinha);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Diferença da linha");
        jPanel2.add(jLabel6);

        sldDiferencaLinha.setMaximum(500);
        sldDiferencaLinha.setMinimum(1);
        sldDiferencaLinha.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldDiferencaLinhaStateChanged(evt);
            }
        });
        jPanel2.add(sldDiferencaLinha);

        spnDiferencaLinha.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnDiferencaLinhaStateChanged(evt);
            }
        });
        jPanel2.add(spnDiferencaLinha);

        jPanel3.setLayout(new java.awt.GridLayout(2, 0));

        radioImgExibicao.add(radImgOriginal);
        radImgOriginal.setText("Original");
        radImgOriginal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radImgOriginalItemStateChanged(evt);
            }
        });
        jPanel3.add(radImgOriginal);

        radioImgExibicao.add(radImgContorno);
        radImgContorno.setText("Contorno");
        radImgContorno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radImgContornoItemStateChanged(evt);
            }
        });
        jPanel3.add(radImgContorno);

        radioImgExibicao.add(radImgOriginalLinha);
        radImgOriginalLinha.setSelected(true);
        radImgOriginalLinha.setText("Original com linha");
        radImgOriginalLinha.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radImgOriginalLinhaItemStateChanged(evt);
            }
        });
        jPanel3.add(radImgOriginalLinha);

        radioImgExibicao.add(radImgContornoLinha);
        radImgContornoLinha.setText("Contorno com linha");
        radImgContornoLinha.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radImgContornoLinhaItemStateChanged(evt);
            }
        });
        jPanel3.add(radImgContornoLinha);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Eventos de componentes">
    private void sldDistanciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldDistanciaStateChanged
        int vl = (int) sldDistancia.getValue();
        obj.setRho(vl);
        spnDistancia.setValue(vl);
    }//GEN-LAST:event_sldDistanciaStateChanged

    private void spnDistanciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnDistanciaStateChanged
        int vl = (int) spnDistancia.getValue();
        obj.setRho(vl);
        sldDistancia.setValue(vl);
    }//GEN-LAST:event_spnDistanciaStateChanged

    private void sldAnguloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldAnguloStateChanged
        int vl = (int) sldAngulo.getValue();
        obj.setTheta(vl);
        spnAngulo.setValue(vl);
    }//GEN-LAST:event_sldAnguloStateChanged

    private void spnAnguloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnAnguloStateChanged
        int vl = (int) spnAngulo.getValue();
        obj.setTheta(vl);
        sldAngulo.setValue(vl);
    }//GEN-LAST:event_spnAnguloStateChanged

    private void sldLimiteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldLimiteStateChanged
        int vl = (int) sldLimite.getValue();
        obj.setThreshold(vl);
        spnLimite.setValue(vl);
    }//GEN-LAST:event_sldLimiteStateChanged

    private void spnLimiteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnLimiteStateChanged
        int vl = (int) spnLimite.getValue();
        obj.setThreshold(vl);
        sldLimite.setValue(vl);
    }//GEN-LAST:event_spnLimiteStateChanged

    private void sldHisterese1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldHisterese1StateChanged
        int vl = (int) sldHisterese1.getValue();
        obj.setCannyThreshold1(vl);
        spnHisterese1.setValue(vl);
    }//GEN-LAST:event_sldHisterese1StateChanged

    private void spnHisterese1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnHisterese1StateChanged
        int vl = (int) spnHisterese1.getValue();
        obj.setCannyThreshold1(vl);
        sldHisterese1.setValue(vl);
    }//GEN-LAST:event_spnHisterese1StateChanged

    private void sldHisterese2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldHisterese2StateChanged
        int vl = (int) sldHisterese2.getValue();
        obj.setCannyThreshold2(vl);
        spnHisterese2.setValue(vl);
    }//GEN-LAST:event_sldHisterese2StateChanged

    private void spnHisterese2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnHisterese2StateChanged
        int vl = (int) spnHisterese2.getValue();
        obj.setCannyThreshold2(vl);
        sldHisterese2.setValue(vl);
    }//GEN-LAST:event_spnHisterese2StateChanged

    private void sldSobelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldSobelStateChanged
        int vl = (int) sldSobel.getValue();
        setVlSobel(vl);
        spnSobel.setValue(vl);
    }//GEN-LAST:event_sldSobelStateChanged

    private void spnSobelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnSobelStateChanged
        int vl = (int) spnSobel.getValue();
        setVlSobel(vl);
        sldSobel.setValue(vl);
    }//GEN-LAST:event_spnSobelStateChanged

    private void cbxGradienteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbxGradienteStateChanged
        obj.setCannyGradient(cbxGradiente.isSelected());
    }//GEN-LAST:event_cbxGradienteStateChanged

    private void sldTamMinLinhaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldTamMinLinhaStateChanged
        int vl = (int) sldTamMinLinha.getValue();
        obj.setMinLineLength(vl);
        spnTamMinLinha.setValue(vl);
    }//GEN-LAST:event_sldTamMinLinhaStateChanged

    private void sldDiferencaLinhaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldDiferencaLinhaStateChanged
        int vl = (int) sldDiferencaLinha.getValue();
        obj.setMaxLineGap(vl);
        spnDiferencaLinha.setValue(vl);
    }//GEN-LAST:event_sldDiferencaLinhaStateChanged

    private void spnTamMinLinhaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnTamMinLinhaStateChanged
        int vl = (int) spnTamMinLinha.getValue();
        obj.setMinLineLength(vl);
        sldTamMinLinha.setValue(vl);
    }//GEN-LAST:event_spnTamMinLinhaStateChanged

    private void spnDiferencaLinhaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnDiferencaLinhaStateChanged
        int vl = (int) spnDiferencaLinha.getValue();
        obj.setMaxLineGap(vl);
        sldDiferencaLinha.setValue(vl);
    }//GEN-LAST:event_spnDiferencaLinhaStateChanged

    private void radImgOriginalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radImgOriginalItemStateChanged
        obj.setImgAlvoLinhas(0);
    }//GEN-LAST:event_radImgOriginalItemStateChanged

    private void radImgOriginalLinhaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radImgOriginalLinhaItemStateChanged
        obj.setImgAlvoLinhas(1);
    }//GEN-LAST:event_radImgOriginalLinhaItemStateChanged

    private void radImgContornoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radImgContornoItemStateChanged
        obj.setImgAlvoLinhas(0);
    }//GEN-LAST:event_radImgContornoItemStateChanged

    private void radImgContornoLinhaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radImgContornoLinhaItemStateChanged
        obj.setImgAlvoLinhas(2);
    }//GEN-LAST:event_radImgContornoLinhaItemStateChanged

    private void setVlSobel(int vl) {

        if (vl == -1 || vl == 3 || vl == 5 || vl == 7) {
            obj.setCannyApertureSize(vl);
            lblSobel.setForeground(Color.black);
        } else {
            lblSobel.setForeground(Color.red);
        }

        spnSobel.setValue(vl);
        sldSobel.setValue(vl);
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Métodos herdados">
    @Override
    public boolean cameraEstaPronta() {
        return cameraDisponivel;
    }

    @Override
    public void iniciar() {
        obj.iniciarCaptura();
    }

    @Override
    public void parar() {
        obj.pararCaptura();
    }

    @Override
    public void setPainelExibicao(JPanel painel) {
        pnlExibicao = painel;
    }

    @Override
    public void update(Observable o, Object arg) {
        BufferedImage[] bufImgs = (BufferedImage[]) arg;
        Graphics g = pnlExibicao.getGraphics();

        //bufImgs[1].getGraphics().setColor(Color.blue);
        //bufImgs[1].getGraphics().drawString("Contorno", 12, 12);
        if (radImgOriginal.isSelected() || radImgOriginalLinha.isSelected()) {
            g.drawImage(bufImgs[0], 0, 0, null);
        } else if (radImgContorno.isSelected() || radImgContornoLinha.isSelected()) {
            g.drawImage(bufImgs[1], 0, 0, null);
        }

        //bufImgs[0].getGraphics().drawImage(bufImgs[1], 0, 0, (int) (bufImgs[1].getWidth() / 4), (int) (bufImgs[1].getHeight() / 4), null);
        //g.drawImage(bufImgs[0], 0, 0, null);
        cameraDisponivel = true;
    }
    // </editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbxGradiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblSobel;
    private javax.swing.JRadioButton radImgContorno;
    private javax.swing.JRadioButton radImgContornoLinha;
    private javax.swing.JRadioButton radImgOriginal;
    private javax.swing.JRadioButton radImgOriginalLinha;
    private javax.swing.ButtonGroup radioImgExibicao;
    private javax.swing.JSlider sldAngulo;
    private javax.swing.JSlider sldDiferencaLinha;
    private javax.swing.JSlider sldDistancia;
    private javax.swing.JSlider sldHisterese1;
    private javax.swing.JSlider sldHisterese2;
    private javax.swing.JSlider sldLimite;
    private javax.swing.JSlider sldSobel;
    private javax.swing.JSlider sldTamMinLinha;
    private javax.swing.JSpinner spnAngulo;
    private javax.swing.JSpinner spnDiferencaLinha;
    private javax.swing.JSpinner spnDistancia;
    private javax.swing.JSpinner spnHisterese1;
    private javax.swing.JSpinner spnHisterese2;
    private javax.swing.JSpinner spnLimite;
    private javax.swing.JSpinner spnSobel;
    private javax.swing.JSpinner spnTamMinLinha;
    // End of variables declaration//GEN-END:variables

}
